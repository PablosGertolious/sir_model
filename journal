4/18/20
Created a new file to start varying the susceptible population count. Hard to say, but there is little to no improvement. A reason for this is the on parameter that seems to be changing is the beta value. The steps sizes are maxing out. So things to play with are trying to create more effecients step lengths, figure out why the other parmeters seems to never change. Do I just need more steps and better step size?
4/24/20
The algortihm gets as close as it can only change beta, and doesn't not even try to change the other variables. This is good news because this will be an easier fix.
4/29/20
Things we want to try:
  -Attempt a trust region method.
  -Try approximating the hessian with the Jacobian (h approx J^T J).
    g = -J_k^T r_k

    For now, out new function for gradient and hessian, is NOT giving me a descent direction, so failing the Amijio condition.

4/28/20
  Much progress today
    Fixed the "not optimizing" in the susceptible population count. The function was not using the value but a stored one.
    Switched to using population density for measured data instead to more evenly distribute x. This helped stabilize things a great deal.

  Things I want to do still:
    -have f(x) also measure the difference in the recover population. Algorithm does not seem to get the recovered numbers even close.
    -use Jacobian to calculate derivatives.
    -Set up trust region method algorithm
    -get stupid colormap thing to work

4/29/20
  I implemented the finite Jacobian calculation and am now using it to calculate the gradient and the hessian. The function is now calculating the error of both I and R predictions. I also set up an alternate data source which creates fake data for a solution to the SIR model for testing. As a result of using it, the code is working, but slowly. I expect that implementing that hessian will help a great deal, either with a quasi newton method, or a trust region method.

4/30/20
  Tasks:
    -create the quadradic model.

    -Minimize the model
    -compute rho
    -make appropriate actions based on rho
5/1/2020
  For trust region method, it is necessary that B_k is positive definite. It is not. Why is it not. The hessian not spd implies that j is not spd(Note that this is of course true. j is not event square). in the end, j is approximated with finite derivatives, but should it be that sensitive?

5/2/2020
  We have been provided the following tips for dealing with this non-pd hessian. First I am looking through section 3.4 for modifying the hessian to make it spd. Next I will research quasi-newton methods such as BFGS.
  Section 3.4
    Eigen-value Modification
      If we can do spectral decomposition, then we can modify the problematic eigen value to be positive, but small.
      Okay, so I have done this now. the hessian is pd now, but my rho is still large negative. Time to investigate.
        What we have is that the function is not decreasing with the choice step p. Which means m is a terrible model approximation of f as written. It's worth nothing that the first step is really good, them the following steps are really bad. What happens? Perhaps the model is not updating. Need to investigate further.
      Okay problem solved. The optimize of the model was not bounding the solution to inside the trust radius. so basically updating the radius did nothing and the sequence basically stopped changing.
  The trust regions is not super fast, but I have a lot of parameters to tweak, so this could be good. the movement is interesting. I'm doing a long run now, so I will make more observations shortly:
    keeps pushing for S>N. Looking at the plots, it is attributing a lower function value to the recovered model close to the infection curve. So, we are going the wrong direction. Need a break. Time to push this up.

5/3/2020
  Why does the function keep tending toward mixing the I and R curves? I will investigate.
  The TRM works really well on know data, VERY FAST! but the real data sends it to a susceptible population density of 1 and gets stuck there. Need to consider two questions:
    1. Why/how can in consider a lower function state for s0=1?
    2. Why can't I match the data with my varied parameters alone?

5/4/20
  I'm not really sure how I want to proceed, but for starters we can start to optimize the initial infected population, that will fix the initial recovered by normalization. I want to look closely that I am considering the death count properly. After this, I really need to investigate the questions above. For this I want to take a close look at what the residue function says when this happens.

  Good news, we are getting consistent results with the TRM. Bad news, the best the model can get is not looking good. I believe we are reaching limitations with this model. Maybe it's time we include deaths. Be sure to take plot pictures at this point
  Need to consider more ways to improve the model. There is a lot more we can do with countries where the virus has run its course.
    -We can add this extra incubated columns.
    -Let also try another data source.

  Alright good day to you. I'm out.
